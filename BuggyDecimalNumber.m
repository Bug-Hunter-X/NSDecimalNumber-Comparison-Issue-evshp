In Objective-C, a subtle error can occur when dealing with `NSDecimalNumber` and comparing its values using `isEqualToNumber:` method.  If you are comparing `NSDecimalNumber` objects created from different string representations, even if the values are mathematically equal, the comparison might return `NO`. This is because `NSDecimalNumber` stores the numbers with different internal representations based on their string origins. For example, "1.0" and "1.00" might appear equal, but they have distinct internal representations resulting in `isEqualToNumber:` returning false.